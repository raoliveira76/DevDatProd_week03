BOOSTING <- cross_validate(container, 4, "BOOSTING")
RF <- cross_validate(container, 4, "RF")
#NNET <- cross_validate(container, 4, "NNET")
#TREE <- cross_validate(container, 4, "TREE")
write.csv(analytics@document_summary, "C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/DocumentSummary.csv")
save.image("~/R_Language/_DadosAClassificar/PaperTest/envirn.RData")
write.csv(analytics@document_summary, "C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/PaperTest/DocumentSummary.csv")
summary(analytics)
?create_container
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(dt$xProd, dt$NCM, dt$cEAN, sep = " "), "isOK" = dt$Utilizar.)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
doc_matrix <- create_matrix(USCongress$text, language="english", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra <- amostra[sample(nrow(amostra)), ]
?create_matrix
?tm
library(tm)
?tm
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=FALSE,
stemWords=TRUE, removeSparseTerms=.998)
amostra_matrix
amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_container
SVM <- train_model(amostra_container,"SVM")
SVM <- train_model(container,"SVM")
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, RF)
amostra_NNET_CLASSIFY <- classify_model(amostra_container, NNET)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, TREE)
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_NNET_CLASSIFY <- classify_model(amostra_container, amostra_NNET)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_SLDA_CLASSIFY, amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY, amostra_GLMNET_CLASSIFY,
amostra_TREE_CLASSIFY, amostra_MAXENT_CLASSIFY))
summary(amostra_analytics)
amostra_topic_summary <- amostra_analytics@label_summary
amostra_alg_summary <- amostra_analytics@algorithm_summary
amostra_ens_summary <-amostra_analytics@ensemble_summary
amostra_doc_summary <- amostra_analytics@document_summary
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY, amostra_MAXENT_CLASSIFY,
amostra_SLDA_CLASSIFY, amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY,
amostra_TREE_CLASSIFY))
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY, amostra_MAXENT_CLASSIFY,
amostra_SLDA_CLASSIFY, amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY,
amostra_TREE_CLASSIFY))
amostra_matrix
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=FALSE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=FALSE, stemWords=TRUE, removeSparseTerms=.998)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=FALSE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=FALSE, stemWords=TRUE, removeSparseTerms=.998)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY, amostra_MAXENT_CLASSIFY,
amostra_SLDA_CLASSIFY, amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY,
amostra_TREE_CLASSIFY))
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
#amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:37, testSize=38:40,
virgin=FALSE)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:37, testSize=38:40,
virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY, amostra_MAXENT_CLASSIFY,
amostra_SLDA_CLASSIFY, amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY,
amostra_TREE_CLASSIFY))
summary(amostra_analytics)
amostra_topic_summary <- amostra_analytics@label_summary
amostra_alg_summary <- amostra_analytics@algorithm_summary
amostra_ens_summary <-amostra_analytics@ensemble_summary
amostra_doc_summary <- amostra_analytics@document_summary
amostra_SVM <- cross_validate(amostra_container, 4, "SVM")
amostra_GLMNET <- cross_validate(amostra_container, 4, "GLMNET")
amostra_MAXENT <- cross_validate(amostra_container, 4, "MAXENT")
amostra_SLDA <- cross_validate(amostra_container, 4, "SLDA")
amostra_BAGGING <- cross_validate(amostra_container, 4, "BAGGING")
amostra_BOOSTING <- cross_validate(amostra_container, 4, "BOOSTING")
amostra_RF <- cross_validate(amostra_container, 4, "RF")
#NNET <- cross_validate(container, 4, "NNET")
amostra_TREE <- cross_validate(amostra_container, 4, "TREE")
amostra_topic_summary
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
#amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:37, testSize=38:40,
virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY, amostra_MAXENT_CLASSIFY,
amostra_SLDA_CLASSIFY, amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY,
amostra_TREE_CLASSIFY))
summary(amostra_analytics)
cross_amostra_SVM <- cross_validate(amostra_container, 4, "SVM")
cross_amostra_GLMNET <- cross_validate(amostra_container, 4, "GLMNET")
cross_amostra_MAXENT <- cross_validate(amostra_container, 4, "MAXENT")
cross_amostra_SLDA <- cross_validate(amostra_container, 4, "SLDA")
cross_amostra_BAGGING <- cross_validate(amostra_container, 4, "BAGGING")
cross_amostra_BOOSTING <- cross_validate(amostra_container, 4, "BOOSTING")
cross_amostra_RF <- cross_validate(amostra_container, 4, "RF")
#NNET <- cross_validate(container, 4, "NNET")
cross_amostra_TREE <- cross_validate(amostra_container, 4, "TREE")
amostra_container@testing_codes
amostra_container@training_codes
amostra_container@classification_matrix
amostra_SVM_CLASSIFY
amostra_SVM_CLASSIFY
amostra_GLMNET_CLASSIFY
amostra_MAXENT_CLASSIFY
amostra_SLDA_CLASSIFY
amostra_BOOSTING_CLASSIFY
amostra_BAGGING_CLASSIFY
amostra_RF_CLASSIFY
amostra_TREE_CLASSIFY
summary(amostra_analytics)
amostra_topic_summary
amostra_alg_summary
amostra_ens_summary
amostra_doc_summary
as.table(amostra_doc_summary)
table(amostra_doc_summary)
amostra_doc_summary
amostra_TREE_CLASSIFY
amostra_RF_CLASSIFY
set.seed(197604)
library(RTextTools)
library(tm)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
View(amostra)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
View(amostra)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:37, testSize=38:40,
virgin=FALSE)
amostra_matrix
amostra_container
View(amostra)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
#amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, #amostra_GLMNET_CLASSIFY,
amostra_MAXENT_CLASSIFY, #amostra_SLDA_CLASSIFY,
amostra_BOOSTING_CLASSIFY,
amostra_BAGGING_CLASSIFY, amostra_RF_CLASSIFY,
amostra_TREE_CLASSIFY))
summary(amostra_analytics)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
#amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:250, testSize=251:300,
virgin=FALSE)
amostra_matrix
amostra_container
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.995)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.999)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.999)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.99)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:250, testSize=251:300,
virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
#amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_NNET_CLASSIFY <- classify_model(amostra_container, amostra_NNET)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, #amostra_GLMNET_CLASSIFY,
amostra_MAXENT_CLASSIFY, amostra_SLDA_CLASSIFY,
amostra_BOOSTING_CLASSIFY, amostra_BAGGING_CLASSIFY,
amostra_RF_CLASSIFY, # amostra_NNET_CLASSIFY,
amostra_TREE_CLASSIFY))
summary(amostra_analytics)
amostra_SVM_CLASSIFY
amostra_TREE_CLASSIFY
amostra_RF_CLASSIFY
amostra_topic_summary
amostra_topic_summary <- amostra_analytics@label_summary
amostra_alg_summary <- amostra_analytics@algorithm_summary
amostra_ens_summary <-amostra_analytics@ensemble_summary
amostra_doc_summary <- amostra_analytics@document_summary
View(amostra_MAXENT_CLASSIFY)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
#amostra_container <- create_container(amostra_matrix, amostra$isOK, trainSize=1:37, testSize=38:40, virgin=FALSE)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:250, testSize=251:300,
virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_NNET_CLASSIFY <- classify_model(amostra_container, amostra_NNET)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY,
amostra_MAXENT_CLASSIFY, amostra_SLDA_CLASSIFY,
amostra_BOOSTING_CLASSIFY, amostra_BAGGING_CLASSIFY,
amostra_RF_CLASSIFY, #amostra_NNET_CLASSIFY,
amostra_TREE_CLASSIFY))
summary(amostra_analytics)
amostra_topic_summary <- amostra_analytics@label_summary
amostra_alg_summary <- amostra_analytics@algorithm_summary
amostra_ens_summary <-amostra_analytics@ensemble_summary
amostra_doc_summary <- amostra_analytics@document_summary
cross_amostra_SVM <- cross_validate(amostra_container, 4, "SVM")
cross_amostra_GLMNET <- cross_validate(amostra_container, 4, "GLMNET")
cross_amostra_MAXENT <- cross_validate(amostra_container, 4, "MAXENT")
cross_amostra_SLDA <- cross_validate(amostra_container, 4, "SLDA")
cross_amostra_BAGGING <- cross_validate(amostra_container, 4, "BAGGING")
cross_amostra_BOOSTING <- cross_validate(amostra_container, 4, "BOOSTING")
cross_amostra_RF <- cross_validate(amostra_container, 4, "RF")
#cross_amostra_NNET <- cross_validate(amostra_container, 4, "NNET")
cross_amostra_TREE <- cross_validate(amostra_container, 4, "TREE")
amostra_alg_summary
create_ensembleSummary(amostra_analytics@document_summary)
create_ensembleSummary(amostra_analytics@document_summary)
View(amostra)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.8)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/xProd-NCM-cEAN_201412_amostra.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.8)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.9)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.99)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.98)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.97)
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_matrix$ncol
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:250, testSize=251:300,
virgin=FALSE)
summary(amostra_analytics)
save.image("~/R_Language/_DadosAClassificar/PaperTest/envirn.RData")
save.image("~/R_Language/_DadosAClassificar/PaperTest/testeaovivo.RData")
set.seed(197604)
library(RTextTools)
library(tm)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/teste_aovivo.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
View(amostra)
amostra <- read.csv("C:/Users/ronaldoo/Documents/R_Language/_DadosAClassificar/ExtraTest/teste_aovivo.csv",
sep = "|", header = TRUE)
amostra <- data.frame("Item" = paste(amostra$xProd, amostra$NCM, amostra$cEAN, sep = " "), "isOK" = amostra$Utilizar.)
amostra <- amostra[sample(nrow(amostra)), ]
amostra_matrix <- create_matrix(amostra$Item, language="portuguese", removeNumbers=TRUE, stemWords=TRUE, removeSparseTerms=.998)
amostra_container <- create_container(amostra_matrix, as.numeric(factor(amostra$isOK)), trainSize=1:800, testSize=881:999,
virgin=FALSE)
amostra_SVM <- train_model(amostra_container,"SVM")
amostra_GLMNET <- train_model(amostra_container,"GLMNET")
amostra_MAXENT <- train_model(amostra_container,"MAXENT")
amostra_SLDA <- train_model(amostra_container,"SLDA")
amostra_BOOSTING <- train_model(amostra_container,"BOOSTING")
amostra_BAGGING <- train_model(amostra_container,"BAGGING")
amostra_RF <- train_model(amostra_container,"RF")
amostra_NNET <- train_model(amostra_container,"NNET")
amostra_TREE <- train_model(amostra_container,"TREE")
amostra_SVM_CLASSIFY <- classify_model(amostra_container, amostra_SVM)
amostra_GLMNET_CLASSIFY <- classify_model(amostra_container, amostra_GLMNET)
amostra_MAXENT_CLASSIFY <- classify_model(amostra_container, amostra_MAXENT)
amostra_SLDA_CLASSIFY <- classify_model(amostra_container, amostra_SLDA)
amostra_BOOSTING_CLASSIFY <- classify_model(amostra_container, amostra_BOOSTING)
amostra_BAGGING_CLASSIFY <- classify_model(amostra_container, amostra_BAGGING)
amostra_RF_CLASSIFY <- classify_model(amostra_container, amostra_RF)
amostra_NNET_CLASSIFY <- classify_model(amostra_container, amostra_NNET)
amostra_TREE_CLASSIFY <- classify_model(amostra_container, amostra_TREE)
amostra_analytics <- create_analytics(amostra_container,
cbind(amostra_SVM_CLASSIFY, amostra_GLMNET_CLASSIFY,
amostra_MAXENT_CLASSIFY, amostra_SLDA_CLASSIFY,
amostra_BOOSTING_CLASSIFY, amostra_BAGGING_CLASSIFY,
amostra_RF_CLASSIFY, #amostra_NNET_CLASSIFY,
amostra_TREE_CLASSIFY))
summary(amostra_analytics)
cross_amostra_SVM <- cross_validate(amostra_container, 4, "SVM")
cross_amostra_GLMNET <- cross_validate(amostra_container, 4, "GLMNET")
cross_amostra_MAXENT <- cross_validate(amostra_container, 4, "MAXENT")
cross_amostra_SLDA <- cross_validate(amostra_container, 4, "SLDA")
cross_amostra_BAGGING <- cross_validate(amostra_container, 4, "BAGGING")
cross_amostra_BOOSTING <- cross_validate(amostra_container, 4, "BOOSTING")
cross_amostra_RF <- cross_validate(amostra_container, 4, "RF")
#cross_amostra_NNET <- cross_validate(amostra_container, 4, "NNET")
cross_amostra_TREE <- cross_validate(amostra_container, 4, "TREE")
library(leaflet)
df %>%
leaflet() %>%
addTiles() %>%
addCircles(lng= -52.27, lat= -27.64, popup="** Now **", color = "orange", radius = 1E4) %>%
addCircles(lng= -79.40, lat=  43.65, popup="** To Work ** ", color = "blue", radius = 1E4) %>%
addCircles(lng= -68.65, lat=  18.80, popup="** Paradise **", color = "green", radius = 1E4) %>%
addCircles(lng= 115.86, lat= -31.95, popup="** To Live **", color = "yellow", radius = 1E4) %>%
addCircles(lng= -81.45, lat=  28.60, popup="** Shopping **", color = "red", radius = 1E4)
df %>%
leaflet() %>%
addTiles() %>%
addCircles(lng= -52.27, lat= -27.64, popup="** Now **", color = "orange", radius = 1E4) %>%
addCircles(lng= -79.40, lat=  43.65, popup="** To Work ** ", color = "blue", radius = 1E4) %>%
addCircles(lng= -68.65, lat=  18.80, popup="** Paradise **", color = "green", radius = 1E4) %>%
addCircles(lng= 115.86, lat= -31.95, popup="** To Live **", color = "purple", radius = 1E4) %>%
addCircles(lng= -81.45, lat=  28.60, popup="** Shopping **", color = "red", radius = 1E4)
df %>%
leaflet() %>%
addTiles() %>%
addCircles(lng= -52.27, lat= -27.64, popup="** Now **", color = "orange", radius = 1E5) %>%
addCircles(lng= -79.40, lat=  43.65, popup="** To Work ** ", color = "blue", radius = 1E5) %>%
addCircles(lng= -68.65, lat=  18.80, popup="** Paradise **", color = "green", radius = 1E5) %>%
addCircles(lng= 115.86, lat= -31.95, popup="** To Live **", color = "purple", radius = 1E5) %>%
addCircles(lng= -81.45, lat=  28.60, popup="** Shopping **", color = "red", radius = 1E5)
setwd("~/R_Language/Course_JohnHUniversity/09_DevelopingDataProducts/Assignment/Week03/DataProductsR_Week03")
library(slidify)
slidify("index.html")
slidify("index.html")
